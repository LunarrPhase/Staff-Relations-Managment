export class Transaction {
    getAll(...refsOrReadOptions: any[]): Promise<any[]>;
    get(ref: any, ...args: any[]): Promise<any>;
    set(ref: any, ...args: any[]): Transaction;
    update(ref: any, ...args: any[]): Transaction;
    delete(ref: any, ...args: any[]): Transaction;
    create(ref: any, options: any, ...args: any[]): Transaction;
}
declare const mockGetAll: jest.Mock<any, any>;
declare const mockGetAllTransaction: jest.Mock<any, any>;
declare const mockGetTransaction: jest.Mock<any, any>;
declare const mockSetTransaction: jest.Mock<any, any>;
declare const mockUpdateTransaction: jest.Mock<any, any>;
declare const mockDeleteTransaction: jest.Mock<any, any>;
declare const mockCreateTransaction: jest.Mock<any, any>;
export declare namespace mocks {
    export { mockGetAll };
    export { mockGetAllTransaction };
    export { mockGetTransaction };
    export { mockSetTransaction };
    export { mockUpdateTransaction };
    export { mockDeleteTransaction };
    export { mockCreateTransaction };
}
export {};
//# sourceMappingURL=transaction.d.ts.map