export class FieldValue {
    static arrayUnion(elements?: any[], ...args: any[]): FieldValue;
    static arrayRemove(elements: any, ...args: any[]): FieldValue;
    static increment(amount?: number, ...args: any[]): FieldValue;
    static serverTimestamp(...args: any[]): FieldValue;
    static delete(...args: any[]): FieldValue;
    constructor(type: any, value: any);
    type: any;
    value: any;
    isEqual(other: any): boolean;
}
declare const mockArrayUnionFieldValue: jest.Mock<any, any>;
declare const mockArrayRemoveFieldValue: jest.Mock<any, any>;
declare const mockDeleteFieldValue: jest.Mock<any, any>;
declare const mockIncrementFieldValue: jest.Mock<any, any>;
declare const mockServerTimestampFieldValue: jest.Mock<any, any>;
export declare namespace mocks {
    export { mockArrayUnionFieldValue };
    export { mockArrayRemoveFieldValue };
    export { mockDeleteFieldValue };
    export { mockIncrementFieldValue };
    export { mockServerTimestampFieldValue };
}
export {};
//# sourceMappingURL=fieldValue.d.ts.map